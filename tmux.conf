set -g default-terminal "xterm-256color"
set -ga terminal-overrides ",xterm-256color:Tc"
set-option -g status-position top


# action key
unbind C-b
set -g prefix C-a

setw -g xterm-keys on
set -s escape-time 0
set -sg repeat-time 300
set -s focus-events on
set -g mouse on
set -sg exit-empty on

set -q -g status-utf8 on
setw -q -g utf8 on

set -g visual-activity off
setw -g monitor-activity off
setw -g monitor-bell off

set -g history-limit 10000

# bind t send-key C-t
# Reload settings
bind r source-file ~/.config/tmux/tmux.conf \; display "Reloaded!"

bind -r j resize-pane -D 5
bind -r k resize-pane -U 5
bind -r l resize-pane -R 5
bind -r h resize-pane -L 5
bind -r m resize-pane -Z

set -g set-clipboard on
# display
set -g base-index 1
setw -g pane-base-index 1

setw -g automatic-rename on
set -g renumber-windows on

# allow the title bar to adapt to whatever host you connect to
set -g set-titles on
set -g set-titles-string "#T"

set -g display-panes-time 2000
set -g display-time 2000

set -g status-interval 1

# create session
bind -n M-s new-session

# window management
bind -n M-w new-window -c "#{pane_current_path}"
# break pane to window
bind -n M-b break-pane 
# close self pane
bind -n M-c kill-pane
# close other pane
bind -n M-o kill-pane -a
# close window
bind -n M-q kill-window
# close other window
bind -n M-e kill-window -a

# rebind split window
unbind %
bind = split-window -h -c "#{pane_current_path}"

unbind '"'
bind - split-window -v -c "#{pane_current_path}"

# window navigation
bind 1  select-window -t 1
bind 2  select-window -t 2
bind 3  select-window -t 3
bind 4  select-window -t 4
bind 5  select-window -t 5
bind 6  select-window -t 6
bind 7  select-window -t 7
bind 8  select-window -t 8
bind 9  select-window -t 9
# set -g status-keys emacs
set -g mode-keys vi

bind -n M-v copy-mode

bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind -T copy-mode-vi h send-keys -X cursor-left
bind -T copy-mode-vi l send-keys -X cursor-right
bind -T copy-mode-vi k send-keys -X cursor-up
bind -T copy-mode-vi j send-keys -X cursor-down
bind -T copy-mode-vi e send-keys -X next-word-end
bind -T copy-mode-vi K send-keys -N 5 -X cursor-up
bind -T copy-mode-vi J send-keys -N 5 -X cursor-down
bind -T copy-mode-vi H send-keys -X start-of-line
bind -T copy-mode-vi L send-keys -X end-of-line
bind -T copy-mode-vi Y send-keys -X copy-end-of-line
bind -T copy-mode-vi y send-keys -X copy-selection-and-cancel
bind -T copy-mode-vi = send-keys -X search-again
bind -T copy-mode-vi = send-keys -X search-reverse


# Open current directory
bind o run-shell "open #{pane_current_path}"
# NOTE: git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'dracula/tmux'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @resurrect-capture-pane-contents 'on'
set -g @continuum-restore 'on'
set -g @dracula-cpu-usage-colors "pink dark_gray"
set -g @dracula-plugins "battery ram-usage tmux-ram-usage git"
set -g @dracula-show-powerline true
# set -g @dracula-cpu-usage-label "CPU"
# set -g @dracula-cpu-display-load true
set -g @dracula-battery-label "Battery"
# set -g @dracula-gpu-usage-label "GPU"
set -g @dracula-ram-usage-label "RAM"
set -g @dracula-tmux-ram-usage-label "MEM"
set-window-option -g mode-keys vi

set -g @plugin 'aserowy/tmux.nvim'
# bootstrap tpm
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

run '~/.tmux/plugins/tpm/tpm'
